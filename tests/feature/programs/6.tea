1
123
//
get_tuple: () -> (i64, i64) = {
    return (1, 2);
}

get_first: (t: (i64, i64)) -> i64 = {
    return t.0;
}

as_tuple: (v: i64) -> (i64,) = {
    return (v,);
}

append: (t: (i64,), v: i64) -> (i64, i64) = {
    return (t.0, v);
}

nest: (t: (i64, i64)) -> ((i64, i64),) = {
    return (t,);
}

flatten: (t: ((i64, i64),)) -> (i64, i64) = {
    return t.0;
}

main: () -> i64 = {
    result: (i64, i64) = flatten(nest(append(as_tuple(get_first(get_tuple())), 123)));

    output(result.0);
    output(result.1);

    return 0;
}
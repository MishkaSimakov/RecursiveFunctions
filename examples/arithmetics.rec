# В этом файле содержаться основные арифметические функции

add(x, 0) = x;
add(x, y + 1) = successor(add);

multiply(x, 0) = 0;
multiply(x, y + 1) = add(multiply, x);

power(x, 0) = 1;
power(x, y + 1) = multiply(power, x);

predecessor(0) = 0;
predecessor(x + 1) = x;
monus(x, 0) = x;
monus(x, y + 1) = predecessor(monus);

absolute_difference(x, y) = add(monus(x, y), monus(y, x));

is_positive(0) = 0;
is_positive(x + 1) = 1;

# "logic part, 1 is true, 0 is false, other values causes UB"
not(x) = monus(1, x);

or(x, y) = is_positive(add(x, y));
and(x, y) = not(or(not(x), not(y)));
xor(x, y) = and(or(x, y), not(and(x, y)));

is_equal(x, y) = not(is_positive(absolute_difference(x, y)));
is_greater(x, y) = is_positive(monus(x, y));

conditional_internal(true_value, false_value, 0) = false_value;
conditional_internal(true_value, false_value, condition + 1) = true_value;

conditional(condition, true_value, false_value) = conditional_internal(true_value, false_value, condition);

remainder_internal(divisor, 0) = 0;
remainder_internal(divisor, dividend + 1) = conditional(
    is_equal(successor(remainder_internal), divisor),
    0,
    successor(remainder_internal)
);

remainder(dividend, divisor) = remainder_internal(divisor, dividend);

is_divisible(dividend, divisor) = is_equal(remainder(dividend, divisor), 0);

sqrt(0) = 0;
sqrt(x + 1) = add(sqrt, is_equal(successor(x), multiply(successor(sqrt), successor(sqrt))));
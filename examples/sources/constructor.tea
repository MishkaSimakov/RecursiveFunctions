Rectangle: type = {
    x: i64
    y: i64
    width: i64
    height: i64

    make_square: (x: i64, y: i64, size: i64) -> Rectangle = {
        return {
            x: x,
            y: y,
            width: size,
            height: size
        };
    }

    // method
    set_width: (mut self: &Rectangle, x: i64) -> _ = {
        self.width = width;
    }

    // constructor is just a static method
    Rectangle: () -> Rectangle = {
        result: Rectangle;

        result.x = 1;
        result.y = 2;
        result.width = 3;
        result.height = 4;

        return result;
    }
}

Receive: () -> T = {
    slot: T;        // uninitialized

    slot2: T = T();  // initialized
    slot3 := T();    // also initialized

    addr := &slot; // address of uninitialized object???

    guard := std::unique_lock(mutex);
}

# Функция is_prime рекурсивно проверяет число на простоту
# В этом файле также содержится функция is_prime_argmin. Она также проверяет
# число на простоту, но делает это не рекурсивно, а с помощью argmin

#include "fast_arithmetics"

is_prime_loop(number, 0) = 1;
is_prime_loop(number, i + 1) = conditional(
    is_equal(i, 0),
    1,
    conditional(
        is_equal(remainder(number, successor(i)), 0),
        0,
        is_prime_loop
    )
);

is_prime(number) = conditional(
    or(is_equal(number, 0), is_equal(number, 1)),
    0,
    is_prime_loop(number, predecessor(number))
);

# Эта функция нужна для отсечения простых случаев (0, 1).
# При этом обычный conditional не подошёл бы из-за особенностей исполнения,
# т.к. в случае x = 1 он бы начал вычислять argmin, но для 1 он не останавливается

is_prime_argmin_internal(x, 0) = 0;
is_prime_argmin_internal(x, y + 1) =
    is_equal(
        successor(successor(
            argmin(remainder(x, successor(successor(*))))
        )),
        x
    );

is_prime_argmin(x) = is_prime_argmin_internal(x, is_greater(x, 1));
